Interrupt Vectors
    00000 940C 002A JMP	__text_start|__start
    00002 940C 007C JMP	_int0_isr
    00004 940C 00C9 JMP	_int1_isr

Program Code (text area)
__text_start|__start:
    0002A E5CF      LDI	R28,0x5F
    0002B E0D4      LDI	R29,4
    0002C BFCD      OUT	0x3D,R28
    0002D BFDE      OUT	0x3E,R29
    0002E 51CE      SUBI	R28,0x1E
    0002F 40D0      SBCI	R29,0
    00030 EA0A      LDI	R16,0xAA
    00031 8308      ST	Y,R16
    00032 2400      CLR	R0
    00033 E6E0      LDI	R30,0x60
    00034 E0F0      LDI	R31,0
    00035 E010      LDI	R17,0
    00036 36E2      CPI	R30,0x62
    00037 07F1      CPC	R31,R17
    00038 F011      BEQ	0x003B
    00039 9201      ST	Z+,R0
    0003A CFFB      RJMP	0x0036
    0003B 8300      ST	Z,R16
    0003C E5E4      LDI	R30,0x54
    0003D E0F0      LDI	R31,0
    0003E E6A0      LDI	R26,0x60
    0003F E0B0      LDI	R27,0
    00040 E010      LDI	R17,0
    00041 E000      LDI	R16,0
    00042 BF0B      OUT	0x3B,R16
    00043 35E4      CPI	R30,0x54
    00044 07F1      CPC	R31,R17
    00045 F021      BEQ	0x004A
    00046 95C8      LPM
    00047 9631      ADIW	R30,1
    00048 920D      ST	X+,R0
    00049 CFF9      RJMP	0x0043
    0004A 940E 0062 CALL	_main
_exit:
    0004C CFFF      RJMP	_exit
_delay:
  i                    --> R20
  j                    --> R22
  k                    --> R16
    0004D 940E 0118 CALL	push_xgsetF000
FILE: D:\学习\创客课程\2019.1.23冬令营中断课程\ppt上的例题\例2\example2.c
(0001) #include<iom16v.h>
(0002) #include<macros.h>
(0003) unsigned int shu;
(0004) /***************************************
(0005)            延时函数
(0006) ****************************************/
(0007) void delay(unsigned  int k)
(0008) {
(0009) 	unsigned int i,j;
(0010) 	for(i=0;i<k;i++)
    0004F 2744      CLR	R20
    00050 2755      CLR	R21
    00051 C00B      RJMP	0x005D
(0011) 	for(j=0;j<1148;j++);
    00052 2766      CLR	R22
    00053 2777      CLR	R23
    00054 C002      RJMP	0x0057
    00055 5F6F      SUBI	R22,0xFF
    00056 4F7F      SBCI	R23,0xFF
    00057 376C      CPI	R22,0x7C
    00058 E0E4      LDI	R30,4
    00059 077E      CPC	R23,R30
    0005A F3D0      BCS	0x0055
    0005B 5F4F      SUBI	R20,0xFF
    0005C 4F5F      SBCI	R21,0xFF
    0005D 1740      CP	R20,R16
    0005E 0751      CPC	R21,R17
    0005F F390      BCS	0x0052
    00060 940C 011D JMP	pop_xgsetF000
(0012) }
(0013) /****************************************
(0014)             主函数
(0015) ****************************************/
(0016) void main(void)
(0017) {
(0018) 	DDRB=0XFF; //将 PB 口设置为输出
_main:
    00062 EF8F      LDI	R24,0xFF
    00063 BB87      OUT	0x17,R24
(0019) 	PORTB=0XFF; //PB 口输出 11111111,熄灭全部灯
    00064 BB88      OUT	0x18,R24
(0020) 	DDRD=0XF3; //PD3 设置为输入，其余设置输出
    00065 EF83      LDI	R24,0xF3
    00066 BB81      OUT	0x11,R24
(0021) 	PORTD=0XFF; //PD3 使能上拉电阻，其余都输出 1
    00067 EF8F      LDI	R24,0xFF
    00068 BB82      OUT	0x12,R24
(0022) 	
(0023) 	
(0024) 	MCUCR=0X0A; //INT0 INT1设置为下降沿触发
    00069 E08A      LDI	R24,0xA
    0006A BF85      OUT	0x35,R24
(0025) 	GICR=0XC0; //使能 INT1 INT0中断
    0006B EC80      LDI	R24,0xC0
    0006C BF8B      OUT	0x3B,R24
(0026) 	
(0027) 	SREG=0X80; //使能总中断
    0006D E880      LDI	R24,0x80
    0006E BF8F      OUT	0x3F,R24
    0006F C00A      RJMP	0x007A
(0028) while(1)
(0029) {
(0030) 	PORTB=0X00; //PB 口输出全是 0，点亮 8 个灯
    00070 2422      CLR	R2
    00071 BA28      OUT	0x18,R2
(0031) 	delay(1000); //延时一段时间
    00072 EE08      LDI	R16,0xE8
    00073 E013      LDI	R17,3
    00074 DFD8      RCALL	_delay
(0032) 	PORTB=0XFF; //PB 口输出全是 1，熄灭 8 个灯
    00075 EF8F      LDI	R24,0xFF
    00076 BB88      OUT	0x18,R24
(0033) 	delay(1000); //延时一段时间
    00077 EE08      LDI	R16,0xE8
    00078 E013      LDI	R17,3
    00079 DFD3      RCALL	_delay
    0007A CFF5      RJMP	0x0070
    0007B 9508      RET
_int0_isr:
    0007C 920A      ST	-Y,R0
    0007D 921A      ST	-Y,R1
    0007E 922A      ST	-Y,R2
    0007F 923A      ST	-Y,R3
    00080 924A      ST	-Y,R4
    00081 925A      ST	-Y,R5
    00082 926A      ST	-Y,R6
    00083 927A      ST	-Y,R7
    00084 928A      ST	-Y,R8
    00085 929A      ST	-Y,R9
    00086 930A      ST	-Y,R16
    00087 931A      ST	-Y,R17
    00088 932A      ST	-Y,R18
    00089 933A      ST	-Y,R19
    0008A 938A      ST	-Y,R24
    0008B 939A      ST	-Y,R25
    0008C 93AA      ST	-Y,R26
    0008D 93BA      ST	-Y,R27
    0008E 93EA      ST	-Y,R30
    0008F 93FA      ST	-Y,R31
    00090 B60F      IN	R0,0x3F
    00091 920A      ST	-Y,R0
(0034) 	
(0035) }
(0036) }
(0037) /***************************************
(0038)             中断服务程序
(0039) ***************************************/
(0040) #pragma interrupt_handler int0_isr:2
(0041) void int0_isr(void)
(0042) {
(0043) 	for(shu=0;shu<5;shu++)
    00092 2422      CLR	R2
    00093 2433      CLR	R3
    00094 9230 0061 STS	shu+1,R3
    00096 9220 0060 STS	shu,R2
    00098 C011      RJMP	0x00AA
(0044) 	{
(0045) 	PORTB|= BIT(7); //PB7 输出 1，熄灭 LED
    00099 9AC7      SBI	0x18,7
(0046) 	delay(10); //短暂延时
    0009A E00A      LDI	R16,0xA
    0009B E010      LDI	R17,0
    0009C DFB0      RCALL	_delay
(0047) 	PORTB&=~BIT(7); //PB7 输出 0，点亮 LED
    0009D 98C7      CBI	0x18,7
(0048) 	delay(10); //短暂延时
    0009E E00A      LDI	R16,0xA
    0009F E010      LDI	R17,0
    000A0 DFAC      RCALL	_delay
    000A1 9180 0060 LDS	R24,shu
    000A3 9190 0061 LDS	R25,shu+1
    000A5 9601      ADIW	R24,1
    000A6 9390 0061 STS	shu+1,R25
    000A8 9380 0060 STS	shu,R24
    000AA 9180 0060 LDS	R24,shu
    000AC 9190 0061 LDS	R25,shu+1
    000AE 3085      CPI	R24,5
    000AF E0E0      LDI	R30,0
    000B0 079E      CPC	R25,R30
    000B1 F338      BCS	0x0099
    000B2 9009      LD	R0,Y+
    000B3 BE0F      OUT	0x3F,R0
    000B4 91F9      LD	R31,Y+
    000B5 91E9      LD	R30,Y+
    000B6 91B9      LD	R27,Y+
    000B7 91A9      LD	R26,Y+
    000B8 9199      LD	R25,Y+
    000B9 9189      LD	R24,Y+
    000BA 9139      LD	R19,Y+
    000BB 9129      LD	R18,Y+
    000BC 9119      LD	R17,Y+
    000BD 9109      LD	R16,Y+
    000BE 9099      LD	R9,Y+
    000BF 9089      LD	R8,Y+
    000C0 9079      LD	R7,Y+
    000C1 9069      LD	R6,Y+
    000C2 9059      LD	R5,Y+
    000C3 9049      LD	R4,Y+
    000C4 9039      LD	R3,Y+
    000C5 9029      LD	R2,Y+
    000C6 9019      LD	R1,Y+
    000C7 9009      LD	R0,Y+
    000C8 9518      RETI
_int1_isr:
    000C9 920A      ST	-Y,R0
    000CA 921A      ST	-Y,R1
    000CB 922A      ST	-Y,R2
    000CC 923A      ST	-Y,R3
    000CD 924A      ST	-Y,R4
    000CE 925A      ST	-Y,R5
    000CF 926A      ST	-Y,R6
    000D0 927A      ST	-Y,R7
    000D1 928A      ST	-Y,R8
    000D2 929A      ST	-Y,R9
    000D3 930A      ST	-Y,R16
    000D4 931A      ST	-Y,R17
    000D5 932A      ST	-Y,R18
    000D6 933A      ST	-Y,R19
    000D7 938A      ST	-Y,R24
    000D8 939A      ST	-Y,R25
    000D9 93AA      ST	-Y,R26
    000DA 93BA      ST	-Y,R27
    000DB 93EA      ST	-Y,R30
    000DC 93FA      ST	-Y,R31
    000DD B60F      IN	R0,0x3F
    000DE 920A      ST	-Y,R0
(0049) 	}
(0050) }
(0051) 
(0052) 
(0053) #pragma interrupt_handler int1_isr:3
(0054) void int1_isr(void)
(0055) {
(0056) 	SREG=0X80; //使能全局中断
    000DF E880      LDI	R24,0x80
    000E0 BF8F      OUT	0x3F,R24
(0057) 	for(shu=0;shu<10;shu++)
    000E1 2422      CLR	R2
    000E2 2433      CLR	R3
    000E3 9230 0061 STS	shu+1,R3
    000E5 9220 0060 STS	shu,R2
    000E7 C011      RJMP	0x00F9
(0058) 	{
(0059) 	PORTB|=BIT(7); //PB7 输出 1，熄灭 LED
    000E8 9AC7      SBI	0x18,7
(0060) 	delay(1000); //延时
    000E9 EE08      LDI	R16,0xE8
    000EA E013      LDI	R17,3
    000EB DF61      RCALL	_delay
(0061) 	PORTB&=~BIT(7); //PB7 输出 0，点亮 LED
    000EC 98C7      CBI	0x18,7
(0062) 	delay(1000); //延时
FILE: <library>
    000ED EE08      LDI	R16,0xE8
    000EE E013      LDI	R17,3
    000EF DF5D      RCALL	_delay
    000F0 9180 0060 LDS	R24,shu
    000F2 9190 0061 LDS	R25,shu+1
    000F4 9601      ADIW	R24,1
    000F5 9390 0061 STS	shu+1,R25
    000F7 9380 0060 STS	shu,R24
    000F9 9180 0060 LDS	R24,shu
    000FB 9190 0061 LDS	R25,shu+1
    000FD 308A      CPI	R24,0xA
    000FE E0E0      LDI	R30,0
    000FF 079E      CPC	R25,R30
    00100 F338      BCS	0x00E8
    00101 9009      LD	R0,Y+
    00102 BE0F      OUT	0x3F,R0
    00103 91F9      LD	R31,Y+
    00104 91E9      LD	R30,Y+
    00105 91B9      LD	R27,Y+
    00106 91A9      LD	R26,Y+
    00107 9199      LD	R25,Y+
    00108 9189      LD	R24,Y+
    00109 9139      LD	R19,Y+
    0010A 9129      LD	R18,Y+
    0010B 9119      LD	R17,Y+
    0010C 9109      LD	R16,Y+
    0010D 9099      LD	R9,Y+
    0010E 9089      LD	R8,Y+
    0010F 9079      LD	R7,Y+
    00110 9069      LD	R6,Y+
    00111 9059      LD	R5,Y+
    00112 9049      LD	R4,Y+
    00113 9039      LD	R3,Y+
    00114 9029      LD	R2,Y+
    00115 9019      LD	R1,Y+
    00116 9009      LD	R0,Y+
    00117 9518      RETI
push_xgsetF000:
    00118 937A      ST	-Y,R23
    00119 936A      ST	-Y,R22
    0011A 935A      ST	-Y,R21
    0011B 934A      ST	-Y,R20
    0011C 9508      RET
pop_xgsetF000:
    0011D 9149      LD	R20,Y+
    0011E 9159      LD	R21,Y+
    0011F 9169      LD	R22,Y+
    00120 9179      LD	R23,Y+
    00121 9508      RET
