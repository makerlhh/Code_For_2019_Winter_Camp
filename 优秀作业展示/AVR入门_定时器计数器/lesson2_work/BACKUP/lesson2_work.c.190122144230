#include "iom16v.h"
#define uchar unsigned char
#define uint unsigned int 

void timer0_init();
void counter();
void disp(uint hour,uint minute,uint second,uint ms);
void delay(uint n);
uchar key();

uchar const table[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90};
uint hour = 0,minute = 0,second = 0,ms = 0;
uchar Key_Value = 0X00;

void main()
{
   uchar i;
   timer0_init();
   Key_Value = key();
   while(1)
   {   
       if(Key_Value == 0X0E) 
       { 
           while(1) //计时器、计数器
           {
	            while(1)
		        {
		            TCNT0 = 0X59;
				    break;    
			    }     
	   		    ms++;
	   		    if(ms==100)
	   		    {
	       	        counter();
	   		    } 
                  		    
			    if(Key_Value == 0X0F)  //STAR 控制
			    {
			        hour = 0;minute = 0;second = 0;ms = 0;
			        break;
			    }
			    if(Key_Value == 0X0C)  //RESET 控制
			    {
			        hour = 0;minute = 0;second = 0;ms = 0;
			    }  
                disp(hour,minute,second,ms); 
			    Key_Value = PIND&0X0F;
   		    } 
        }
        Key_Value = key(); //检测按键
    }
   
}

void timer0_init()
{
    TCCR0 = 0X00;
	TCNT0 = 0X59;
	TCCR0 = 0X05; //选择1024分频
}

void counter() //时、分、秒计算
{
	ms = 0;
	second++;
	if(second == 60)
	{
		second = 0;
		minute++;
		if(minute == 60)
		{
		    minute = 0;
			hour++;
			if(hour == 60)
			{
			    hour = 0;
		    }
		}
	}	
	
}

void delay(uint n)  //延时nms  
{
    uint m;
    for(n;n>0;n--)
    {
        for(m = 1141;m>0;m--);
    }
}

void disp(uint hour,uint minute,uint second,uint ms)//显示函数
{
    uchar i;
	uchar num[8] = {0};
    num[0] = hour/10;
	num[1] = hour%10;
	num[2] = minute/10;
	num[3] = minute%10;
	num[4] = second/10;
	num[5] = second%10;
	num[6] = ms/10;
	num[7] = ms%10;
	
	DDRA = 0XFF;
	DDRB = 0XFF;
	while(1)
	{
	    PORTA = 0XFF;
		PORTB = 0X00;
		for(i = 0;i<8;i++)
		{
		    if(((i+1)%2)==0)
			{
			    PORTA = (1<<i);
		        PORTB = table[num[i]]&0X7F;
				delay(1);
				PORTA = 0X00;
				PORTB = 0X00;	    
		    }
			else
			{
			    PORTA = (1<<i);
		        PORTB = table[num[i]];
				delay(1);
				PORTA = 0X00;
				PORTB = 0X00;
			}
		}
		break;
	}
}

uchar key() //按键控制
{
    DDRD = 0X00;
	PORTD = 0X0F;
	while(1)
	{
        Key_Value = PIND&0X0F;
	    if(Key_Value == 0XFF)
	    {
	        return (0);
	    }
        if(Key_Value == 0X0E)
	    {
	        return (Key_Value);
	    }
		//if()
	}
} 
