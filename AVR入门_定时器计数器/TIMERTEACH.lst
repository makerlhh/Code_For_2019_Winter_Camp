Interrupt Vectors
    00000 940C 002A JMP	__text_start|__start

Program Code (text area)
__text_start|__start:
    0002A E5CF      LDI	R28,0x5F
    0002B E0D4      LDI	R29,4
    0002C BFCD      OUT	0x3D,R28
    0002D BFDE      OUT	0x3E,R29
    0002E 51CE      SUBI	R28,0x1E
    0002F 40D0      SBCI	R29,0
    00030 EA0A      LDI	R16,0xAA
    00031 8308      ST	Y,R16
    00032 2400      CLR	R0
    00033 E6E0      LDI	R30,0x60
    00034 E0F0      LDI	R31,0
    00035 E010      LDI	R17,0
    00036 36E0      CPI	R30,0x60
    00037 07F1      CPC	R31,R17
    00038 F011      BEQ	0x003B
    00039 9201      ST	Z+,R0
    0003A CFFB      RJMP	0x0036
    0003B 8300      ST	Z,R16
    0003C E5E4      LDI	R30,0x54
    0003D E0F0      LDI	R31,0
    0003E E6A0      LDI	R26,0x60
    0003F E0B0      LDI	R27,0
    00040 E010      LDI	R17,0
    00041 E000      LDI	R16,0
    00042 BF0B      OUT	0x3B,R16
    00043 35E4      CPI	R30,0x54
    00044 07F1      CPC	R31,R17
    00045 F021      BEQ	0x004A
    00046 95C8      LPM
    00047 9631      ADIW	R30,1
    00048 920D      ST	X+,R0
    00049 CFF9      RJMP	0x0043
    0004A 940E 0058 CALL	_main
_exit:
    0004C CFFF      RJMP	_exit
FILE: D:\dev\AVR\project\timerTeach\main.c
(0001) /*二进制秒表示例
(0002) ATmega16 时钟8MHz
(0003) */
(0004) #include <iom16v.h>
(0005) void port_init(void)
(0006) {
(0007)  DDRA  = 0xff;
_port_init:
    0004D EF8F      LDI	R24,0xFF
    0004E BB8A      OUT	0x1A,R24
(0008)  PORTA = 0x00;
    0004F 2422      CLR	R2
    00050 BA2B      OUT	0x1B,R2
    00051 9508      RET
(0009) }
(0010) void timer0_init(void)
(0011) {
(0012)  TCCR0 = 0x00; //stop
_timer0_init:
    00052 2422      CLR	R2
    00053 BE23      OUT	0x33,R2
(0013)  TCNT0 = 0; //定时器寄存器开始值
    00054 BE22      OUT	0x32,R2
(0014)  TCCR0 = 0b00000010;//选择八分频
    00055 E082      LDI	R24,2
    00056 BF83      OUT	0x33,R24
    00057 9508      RET
(0015) }
(0016) 
(0017) void main(void){
(0018)  int i,j;
(0019)  unsigned char x = 0;
_main:
  j                    --> Y,+1
  x                    --> R10
  i                    --> R20
    00058 24AA      CLR	R10
(0020)  port_init();
    00059 DFF3      RCALL	_port_init
(0021)  timer0_init();
    0005A DFF7      RCALL	_timer0_init
(0022)  PORTA=x;
    0005B BAAB      OUT	0x1B,R10
    0005C C012      RJMP	0x006F
(0023)  while(1){
(0024)   for(i=0;i<10000;i++){   //1s
    0005D 2744      CLR	R20
    0005E 2755      CLR	R21
    0005F C006      RJMP	0x0066
(0025)     while(1){
(0026)         if (TCNT0 == 100 ) {   //100us
    00060 B782      IN	R24,0x32
    00061 3684      CPI	R24,0x64
    00062 F419      BNE	0x0066
(0027)             TCNT0 = 0;
    00063 2422      CLR	R2
    00064 BE22      OUT	0x32,R2
(0028) 			break;
    00065 C001      RJMP	0x0067
    00066 CFF9      RJMP	0x0060
    00067 5F4F      SUBI	R20,0xFF
    00068 4F5F      SBCI	R21,0xFF
    00069 3140      CPI	R20,0x10
    0006A E2E7      LDI	R30,0x27
    0006B 075E      CPC	R21,R30
    0006C F3CC      BLT	0x0066
(0029) 		  }
(0030) 	   } 
(0031) 	}
(0032) 	x++;
    0006D 94A3      INC	R10
(0033) 	PORTA=x;
FILE: <library>
    0006E BAAB      OUT	0x1B,R10
    0006F CFED      RJMP	0x005D
    00070 9508      RET
